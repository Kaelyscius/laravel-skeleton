#!/bin/bash

# =============================================================================
# SCRIPT DE CORRECTION DES PROBL√àMES COMPOSER
# =============================================================================
#
# Ce script corrige les probl√®mes de cache et configuration Composer
# qui peuvent causer des erreurs d'installation avec PHP 8.4 + Laravel 12
#
# Usage: ./scripts/fix-composer-issues.sh
#
# =============================================================================

set -e

# Couleurs pour les logs
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

log() {
    local level=$1
    shift
    local message="$*"
    
    case $level in
        "INFO")  echo -e "${BLUE}‚ÑπÔ∏è  $message${NC}" ;;
        "WARN")  echo -e "${YELLOW}‚ö†Ô∏è  $message${NC}" ;;
        "SUCCESS") echo -e "${GREEN}‚úÖ $message${NC}" ;;
        "ERROR") echo -e "${RED}‚ùå $message${NC}" ;;
    esac
}

# Variables
COMPOSER_HOME="${COMPOSER_HOME:-$HOME/.composer}"
COMPOSER_CACHE_DIR="${COMPOSER_CACHE_DIR:-$HOME/.cache/composer}"

log "INFO" "üîß Diagnostic et correction des probl√®mes Composer pour PHP 8.4"
echo ""

# 1. Diagnostic initial
log "INFO" "üîç Diagnostic initial..."
echo "PHP Version: $(php -v | head -1)"
echo "Composer Version: $(composer --version)"
echo "Composer Home: $COMPOSER_HOME"
echo "Cache Directory: $COMPOSER_CACHE_DIR"
echo ""

# 2. Nettoyer tous les caches Composer
log "INFO" "üßπ Nettoyage complet du cache Composer..."

# Cache principal
if [ -d "$COMPOSER_CACHE_DIR" ]; then
    log "INFO" "Suppression du cache: $COMPOSER_CACHE_DIR"
    rm -rf "$COMPOSER_CACHE_DIR"/*
    log "SUCCESS" "Cache principal nettoy√©"
else
    log "INFO" "Pas de cache principal trouv√©"
fi

# Cache Composer global
composer clear-cache --quiet 2>/dev/null || log "WARN" "Impossible de vider le cache via composer clear-cache"

# Cache sp√©cifique au projet
if [ -d "vendor" ]; then
    log "INFO" "Suppression du dossier vendor local"
    rm -rf vendor/
fi

if [ -f "composer.lock" ]; then
    log "INFO" "Suppression du composer.lock local"
    rm -f composer.lock
fi

log "SUCCESS" "Nettoyage du cache termin√©"
echo ""

# 3. V√©rifier et r√©parer la configuration Composer
log "INFO" "üîß V√©rification de la configuration Composer..."

# Cr√©er le r√©pertoire de configuration s'il n'existe pas
mkdir -p "$COMPOSER_HOME"

# Configuration optimis√©e pour PHP 8.4 + Laravel 12
cat > "$COMPOSER_HOME/config.json" << 'EOF'
{
    "config": {
        "preferred-install": "dist",
        "sort-packages": true,
        "optimize-autoloader": true,
        "classmap-authoritative": true,
        "apcu-autoloader": true,
        "platform-check": false,
        "process-timeout": 3600,
        "cache-timeout": 86400,
        "cache-ttl": 86400,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "php-http/discovery": true,
            "dealerdirect/phpcodesniffer-composer-installer": true
        }
    },
    "repositories": [
        {
            "type": "composer",
            "url": "https://packagist.org"
        }
    ]
}
EOF

# Note: prefer-stable et minimum-stability ne peuvent pas √™tre configur√©s globalement
# Ils sont ajout√©s automatiquement aux projets Laravel

log "SUCCESS" "Configuration Composer optimis√©e cr√©√©e"
echo ""

# 4. Mise √† jour de Composer lui-m√™me
log "INFO" "üì¶ Mise √† jour de Composer..."
composer self-update --stable 2>/dev/null || log "WARN" "Impossible de mettre √† jour Composer"
log "SUCCESS" "Composer mis √† jour"
echo ""

# 5. Diagnostique des plateformes
log "INFO" "üîç Diagnostic des extensions PHP critiques..."

# Extensions requises pour les packages de qualit√©
required_extensions=(
    "mbstring"
    "xml"
    "dom"
    "json"
    "tokenizer"
    "iconv"
)

missing_extensions=()

for ext in "${required_extensions[@]}"; do
    if php -m | grep -q "^$ext$"; then
        log "SUCCESS" "Extension $ext: install√©e"
    else
        missing_extensions+=("$ext")
        log "WARN" "Extension $ext: manquante"
    fi
done

if [ ${#missing_extensions[@]} -gt 0 ]; then
    log "WARN" "Extensions manquantes: ${missing_extensions[*]}"
    log "INFO" "Ces extensions peuvent √™tre n√©cessaires pour certains packages"
else
    log "SUCCESS" "Toutes les extensions requises sont install√©es"
fi
echo ""

# 6. Test de r√©solution des d√©pendances
log "INFO" "üß™ Test de r√©solution des d√©pendances..."

# Cr√©er un composer.json temporaire pour tester
cat > "/tmp/composer-test.json" << 'EOF'
{
    "name": "test/php84-compatibility",
    "require": {
        "php": "^8.4"
    },
    "require-dev": {
        "symplify/easy-coding-standard": "^12.5",
        "rector/rector": "^2.1",
        "nunomaduro/phpinsights": "^2.13"
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}
EOF

if composer validate "/tmp/composer-test.json" --quiet; then
    log "SUCCESS" "Configuration JSON valide"
else
    log "ERROR" "Probl√®me avec la configuration JSON"
fi

# Test de r√©solution (dry-run)
if composer install --dry-run --working-dir="/tmp" --file="/tmp/composer-test.json" >/dev/null 2>&1; then
    log "SUCCESS" "R√©solution des d√©pendances OK"
else
    log "WARN" "Probl√®mes potentiels de r√©solution d√©tect√©s"
fi

rm -f "/tmp/composer-test.json"
echo ""

# 7. Optimisations sp√©cifiques √† l'environnement Docker
if [ -f "/.dockerenv" ] || [ -n "${DOCKER_CONTAINER:-}" ]; then
    log "INFO" "üê≥ Optimisations Docker d√©tect√©es..."
    
    # Variables d'environnement optimis√©es pour Docker
    export COMPOSER_MEMORY_LIMIT=-1
    export COMPOSER_PROCESS_TIMEOUT=3600
    export COMPOSER_ALLOW_SUPERUSER=1
    export COMPOSER_NO_INTERACTION=1
    
    log "SUCCESS" "Variables d'environnement Docker configur√©es"
fi

# 8. Rapport final
echo ""
log "SUCCESS" "üéâ Correction des probl√®mes Composer termin√©e !"
echo ""
log "INFO" "üìã R√©sum√© des actions:"
log "INFO" "  ‚úì Cache Composer nettoy√©"
log "INFO" "  ‚úì Configuration optimis√©e pour PHP 8.4"
log "INFO" "  ‚úì Plugins autoris√©s configur√©s"
log "INFO" "  ‚úì Extensions PHP v√©rifi√©es"
log "INFO" "  ‚úì R√©solution des d√©pendances test√©e"
echo ""

log "INFO" "üí° Prochaines √©tapes recommand√©es:"
log "INFO" "  1. Relancer l'installation Laravel: make install-laravel"
log "INFO" "  2. Si des erreurs persistent, v√©rifier les versions dans config/installer.yml"
log "INFO" "  3. En cas de probl√®me, utiliser: composer diagnose"
echo ""

log "SUCCESS" "Pr√™t pour l'installation Laravel 12 + PHP 8.4 !"