---
# Rôle Docker - Installation et configuration de Docker

- name: "Supprimer les anciennes versions de Docker"
  apt:
    name:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    state: absent
  tags: ["docker", "cleanup"]

- name: "Installer les dépendances pour Docker"
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes
  tags: ["docker", "dependencies"]

- name: "Ajouter la clé GPG officielle de Docker"
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  tags: ["docker", "repository"]

- name: "Ajouter le repository Docker"
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
    update_cache: yes
  tags: ["docker", "repository"]

- name: "Installer Docker Engine"
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
  tags: ["docker", "install"]

- name: "Créer le groupe docker"
  group:
    name: docker
    state: present
  tags: ["docker", "users"]

- name: "Ajouter l'utilisateur au groupe docker"
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes
  tags: ["docker", "users"]

- name: "Ajouter l'utilisateur de l'application au groupe docker"
  user:
    name: "{{ app_user | default('laravel') }}"
    groups: docker
    append: yes
  tags: ["docker", "users"]

- name: "Créer le répertoire de configuration Docker"
  file:
    path: /etc/docker
    state: directory
    owner: root
    group: root
    mode: '0755'
  tags: ["docker", "config"]

- name: "Configurer le daemon Docker"
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: '0644'
  notify: restart docker
  tags: ["docker", "config"]

- name: "Activer et démarrer le service Docker"
  systemd:
    name: docker
    state: started
    enabled: yes
    daemon_reload: yes
  tags: ["docker", "service"]

- name: "Installer Docker Compose (méthode alternative)"
  get_url:
    url: "https://github.com/docker/compose/releases/download/v{{ docker.compose_version }}/docker-compose-linux-x86_64"
    dest: /usr/local/bin/docker-compose
    mode: '0755'
    owner: root
    group: root
  tags: ["docker", "compose"]

- name: "Créer un lien symbolique pour docker-compose"
  file:
    src: /usr/local/bin/docker-compose
    dest: /usr/bin/docker-compose
    state: link
  tags: ["docker", "compose"]

- name: "Vérifier l'installation de Docker"
  command: docker --version
  register: docker_version
  changed_when: false
  tags: ["docker", "verify"]

- name: "Vérifier l'installation de Docker Compose"
  command: docker-compose --version
  register: compose_version
  changed_when: false
  tags: ["docker", "verify"]

- name: "Tester Docker avec une image de test"
  docker_container:
    name: docker-test
    image: hello-world
    state: started
    auto_remove: yes
  register: docker_test
  changed_when: false
  tags: ["docker", "test"]

- name: "Créer un réseau Docker personnalisé"
  docker_network:
    name: "{{ app_project_name | default('laravel-app') }}_network"
    driver: bridge
    state: present
  tags: ["docker", "network"]

- name: "Configurer la rotation des logs Docker"
  template:
    src: docker-logrotate.j2
    dest: /etc/logrotate.d/docker
    owner: root
    group: root
    mode: '0644'
  tags: ["docker", "logging"]

- name: "Créer un script de nettoyage Docker"
  template:
    src: docker-cleanup.sh.j2
    dest: /usr/local/bin/docker-cleanup.sh
    owner: root
    group: root
    mode: '0755'
  tags: ["docker", "cleanup"]

- name: "Programmer le nettoyage automatique Docker"
  cron:
    name: "Docker cleanup"
    minute: "0"
    hour: "2"
    job: "/usr/local/bin/docker-cleanup.sh"
    user: root
  tags: ["docker", "cleanup"]

- name: "Afficher les informations Docker"
  debug:
    msg: |
      Docker installé avec succès:
      - Version Docker: {{ docker_version.stdout }}
      - Version Docker Compose: {{ compose_version.stdout }}
      - Réseau créé: {{ app_project_name | default('laravel-app') }}_network
      - Utilisateurs ajoutés au groupe docker: {{ ansible_user }}, {{ app_user | default('laravel') }}
  tags: ["docker", "info"]