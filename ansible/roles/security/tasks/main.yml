---
# Rôle Security - Configuration sécurisée du système

- name: "Installer les paquets de sécurité"
  apt:
    name:
      - ufw
      - fail2ban
      - unattended-upgrades
      - apt-listchanges
      - logwatch
    state: present
    update_cache: yes
  tags: ["security", "packages"]

- name: "Configurer UFW - Réinitialiser"
  ufw:
    state: reset
  when: security.ufw.enabled | default(true)
  tags: ["security", "firewall"]

- name: "Configurer UFW - Politique par défaut"
  ufw:
    direction: "{{ item.direction }}"
    policy: "{{ item.policy }}"
  loop:
    - { direction: 'incoming', policy: 'deny' }
    - { direction: 'outgoing', policy: 'allow' }
  when: security.ufw.enabled | default(true)
  tags: ["security", "firewall"]

- name: "Configurer UFW - Ouvrir les ports autorisés"
  ufw:
    rule: allow
    port: "{{ item }}"
  loop: "{{ network.firewall.allowed_ports }}"
  when: security.ufw.enabled | default(true)
  tags: ["security", "firewall"]

- name: "Configurer UFW - Bloquer les ports interdits"
  ufw:
    rule: deny
    port: "{{ item }}"
  loop: "{{ network.firewall.blocked_ports }}"
  when: 
    - security.ufw.enabled | default(true)
    - network.firewall.blocked_ports is defined
  tags: ["security", "firewall"]

- name: "Activer UFW"
  ufw:
    state: enabled
    logging: "{{ security.ufw.logging | default('on') }}"
  when: security.ufw.enabled | default(true)
  tags: ["security", "firewall"]

- name: "Configurer SSH - Sécurité"
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^#?{{ item.key }}"
    line: "{{ item.key }} {{ item.value }}"
    backup: yes
  loop:
    - { key: 'Port', value: "{{ security.ssh.port | default(22) }}" }
    - { key: 'Protocol', value: "{{ security.ssh.protocol | default(2) }}" }
    - { key: 'PermitRootLogin', value: "{{ security.ssh.permit_root_login | default('no') }}" }
    - { key: 'PasswordAuthentication', value: "{{ security.ssh.password_authentication | default('no') }}" }
    - { key: 'PubkeyAuthentication', value: "{{ security.ssh.pubkey_authentication | default('yes') }}" }
    - { key: 'MaxAuthTries', value: "{{ security.ssh.max_auth_tries | default(3) }}" }
    - { key: 'MaxSessions', value: "{{ security.ssh.max_sessions | default(10) }}" }
    - { key: 'X11Forwarding', value: 'no' }
    - { key: 'AllowAgentForwarding', value: 'no' }
    - { key: 'AllowTcpForwarding', value: 'no' }
    - { key: 'PermitTunnel', value: 'no' }
  notify: restart ssh
  tags: ["security", "ssh"]

- name: "Configurer Fail2ban - Jail SSH"
  template:
    src: jail.local.j2
    dest: /etc/fail2ban/jail.local
    owner: root
    group: root
    mode: '0644'
  notify: restart fail2ban
  when: security.fail2ban.enabled | default(true)
  tags: ["security", "fail2ban"]

- name: "Démarrer et activer Fail2ban"
  systemd:
    name: fail2ban
    state: started
    enabled: yes
  when: security.fail2ban.enabled | default(true)
  tags: ["security", "fail2ban"]

- name: "Configurer les mises à jour automatiques"
  template:
    src: 50unattended-upgrades.j2
    dest: /etc/apt/apt.conf.d/50unattended-upgrades
    owner: root
    group: root
    mode: '0644'
  tags: ["security", "updates"]

- name: "Activer les mises à jour automatiques"
  template:
    src: 20auto-upgrades.j2
    dest: /etc/apt/apt.conf.d/20auto-upgrades
    owner: root
    group: root
    mode: '0644'
  tags: ["security", "updates"]

- name: "Configurer logwatch"
  template:
    src: logwatch.conf.j2
    dest: /etc/logwatch/conf/logwatch.conf
    owner: root
    group: root
    mode: '0644'
  tags: ["security", "monitoring"]

- name: "Configurer les limites de sécurité"
  pam_limits:
    domain: '*'
    limit_type: "{{ item.type }}"
    limit_item: "{{ item.item }}"
    value: "{{ item.value }}"
  loop:
    - { type: 'hard', item: 'core', value: '0' }
    - { type: 'hard', item: 'maxlogins', value: '10' }
  tags: ["security", "limits"]

- name: "Désactiver les services inutiles"
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
  loop:
    - avahi-daemon
    - cups
    - bluetooth
  ignore_errors: yes
  tags: ["security", "services"]

- name: "Configurer les permissions des fichiers sensibles"
  file:
    path: "{{ item }}"
    mode: '0600'
    owner: root
    group: root
  loop:
    - /etc/ssh/sshd_config
    - /etc/shadow
    - /etc/gshadow
  tags: ["security", "permissions"]

- name: "Créer un utilisateur de sauvegarde"
  user:
    name: backup
    system: yes
    shell: /bin/bash
    home: /var/backups
    createhome: yes
  tags: ["security", "users"]

- name: "Afficher le statut de sécurité"
  debug:
    msg: |
      Configuration sécurisée appliquée :
      - UFW : {{ 'Activé' if security.ufw.enabled | default(true) else 'Désactivé' }}
      - Fail2ban : {{ 'Activé' if security.fail2ban.enabled | default(true) else 'Désactivé' }}
      - SSH sécurisé : Port {{ security.ssh.port | default(22) }}
      - Mises à jour automatiques : Activées
      - Services inutiles : Désactivés
  tags: ["security", "info"]