 name: CI/CD Pipeline

 on:
   push:
     branches: [ main, develop ]
   pull_request:
     branches: [ main, develop ]

 env:
   PHP_VERSION: 8.4
   NODE_VERSION: 20

 jobs:
   tests:
     name: Tests & Quality
     runs-on: ubuntu-latest

     services:
       mariadb:
         image: mariadb:latest
         env:
           MYSQL_ROOT_PASSWORD: password
           MYSQL_DATABASE: laravel_test
           MYSQL_USER: laravel
           MYSQL_PASSWORD: password
         ports:
           - 3306:3306
         options: >-
           --health-cmd="healthcheck.sh --connect --innodb_initialized"
           --health-interval=10s
           --health-timeout=5s
           --health-retries=3

       redis:
         image: redis:alpine
         ports:
           - 6379:6379
         options: >-
           --health-cmd="redis-cli ping"
           --health-interval=10s
           --health-timeout=5s
           --health-retries=3

     steps:
       - name: Checkout code
         uses: actions/checkout@v4

       - name: Setup PHP
         uses: shivammathur/setup-php@v2
         with:
           php-version: ${{ env.PHP_VERSION }}
           extensions: mbstring, pdo, pdo_mysql, redis, opcache, intl, gd, zip, bcmath
           coverage: xdebug
           tools: composer:v2

       - name: Setup Node.js
         uses: actions/setup-node@v4
         with:
           node-version: ${{ env.NODE_VERSION }}
           cache: 'npm'

       - name: Copy .env
         run: |
           cp .env.example .env
           php artisan key:generate

       - name: Cache Composer dependencies
         uses: actions/cache@v3
         with:
           path: vendor
           key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
           restore-keys: |
             ${{ runner.os }}-composer-

       - name: Install Composer dependencies
         run: composer install --no-interaction --prefer-dist --optimize-autoloader

       - name: Cache NPM dependencies
         uses: actions/cache@v3
         with:
           path: node_modules
           key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
           restore-keys: |
             ${{ runner.os }}-npm-

       - name: Install NPM dependencies
         run: npm ci

       - name: Build assets
         run: npm run build

       - name: Run database migrations
         env:
           DB_CONNECTION: mysql
           DB_HOST: 127.0.0.1
           DB_PORT: 3306
           DB_DATABASE: laravel_test
           DB_USERNAME: laravel
           DB_PASSWORD: password
         run: php artisan migrate --force

       - name: Run PHPStan
         run: ./vendor/bin/phpstan analyse

       - name: Run ECS
         run: ./vendor/bin/ecs check

       - name: Run Rector (dry-run)
         run: ./vendor/bin/rector process --dry-run

       - name: Run tests with coverage
         env:
           DB_CONNECTION: mysql
           DB_HOST: 127.0.0.1
           DB_PORT: 3306
           DB_DATABASE: laravel_test
           DB_USERNAME: laravel
           DB_PASSWORD: password
           REDIS_HOST: 127.0.0.1
           REDIS_PORT: 6379
         run: php artisan test --coverage --min=80

       - name: Upload coverage to Codecov
         uses: codecov/codecov-action@v3
         with:
           token: ${{ secrets.CODECOV_TOKEN }}
           file: ./coverage.xml
           fail_ci_if_error: true

   security:
     name: Security Scan
     runs-on: ubuntu-latest
     needs: tests

     steps:
       - name: Checkout code
         uses: actions/checkout@v4

       - name: Run Snyk Security Scan
         uses: snyk/actions/php@master
         env:
           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
         with:
           args: --severity-threshold=high

       - name: Run Trivy vulnerability scanner
         uses: aquasecurity/trivy-action@master
         with:
           scan-type: 'fs'
           scan-ref: '.'
           format: 'sarif'
           output: 'trivy-results.sarif'

       - name: Upload Trivy results to GitHub Security
         uses: github/codeql-action/upload-sarif@v2
         with:
           sarif_file: 'trivy-results.sarif'

   docker:
     name: Build Docker Images
     runs-on: ubuntu-latest
     needs: tests
     if: github.event_name == 'push' && github.ref == 'refs/heads/main'

     steps:
       - name: Checkout code
         uses: actions/checkout@v4

       - name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v3

       - name: Log in to Docker Hub
         uses: docker/login-action@v3
         with:
           username: ${{ secrets.DOCKER_USERNAME }}
           password: ${{ secrets.DOCKER_PASSWORD }}

       - name: Build and push PHP image
         uses: docker/build-push-action@v5
         with:
           context: ./docker/php
           push: true
           tags: |
             ${{ secrets.DOCKER_USERNAME }}/laravel-php:latest
             ${{ secrets.DOCKER_USERNAME }}/laravel-php:${{ github.sha }}
           cache-from: type=gha
           cache-to: type=gha,mode=max

       - name: Build and push Apache image
         uses: docker/build-push-action@v5
         with:
           context: ./docker/apache
           push: true
           tags: |
             ${{ secrets.DOCKER_USERNAME }}/laravel-apache:latest
             ${{ secrets.DOCKER_USERNAME }}/laravel-apache:${{ github.sha }}
           cache-from: type=gha
           cache-to: type=gha,mode=max