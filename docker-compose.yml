services:
  apache:
      build:
        context: .
        dockerfile: docker/apache/Dockerfile
        args:
          UID: 1000
          GID: 1000
      container_name: ${COMPOSE_PROJECT_NAME}_apache
      ports:
        - "80:80"
        - "443:443"
      volumes:
        - ./src:/var/www/html:delegated
        - ./docker/apache/conf/sites-enabled:/etc/apache2/sites-enabled:ro
        - ./docker/apache/conf/ssl:/etc/apache2/ssl:ro
      networks:
        - app-network
      depends_on:
        php:
          condition: service_healthy
      healthcheck:
        test: ["CMD", "curl", "-k", "-f", "https://localhost/health"]
        interval: 30s
        timeout: 10s
        retries: 3
        start_period: 60s
      restart: unless-stopped
      labels:
        - "com.centurylinklabs.watchtower.enable=false"  # Image custom - pas de mise √† jour auto

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        UID: 1000
        GID: 1000
    container_name: ${COMPOSE_PROJECT_NAME}_php
    volumes:
      - ./src:/var/www/html:delegated
      - ./docker/php/conf/php.ini:/usr/local/etc/php/php.ini
      - ./docker/scripts:/docker/scripts:ro
      - ./docker/php/conf/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - ./docker/supervisor/conf.d:/etc/supervisor/conf.d
    networks:
      - app-network
    working_dir: /var/www/html
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "php", "/usr/local/bin/healthcheck.php"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    environment:
      - DB_HOST=mariadb
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - MAIL_HOST=mailhog
      - MAIL_PORT=1025
    labels:
      - "com.centurylinklabs.watchtower.enable=false"  # Image custom - pas de mise √† jour auto

  mariadb:
    image: mariadb:latest
    container_name: ${COMPOSE_PROJECT_NAME}_mariadb
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./docker/mariadb/conf.d:/etc/mysql/conf.d
    networks:
      - app-network
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"   # Image standard - mise √† jour auto

  redis:
    image: redis:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"   # Image standard - mise √† jour auto

  node:
      build:
        context: .
        dockerfile: docker/node/Dockerfile
        args:
          UID: 1000
          GID: 1000
      container_name: ${COMPOSE_PROJECT_NAME}_node
      volumes:
        - ./src:/var/www/html:delegated
        - .:/var/www/project:delegated
      networks:
        - app-network
      working_dir: /var/www/html
      command: tail -f /dev/null
      labels:
        - "com.centurylinklabs.watchtower.enable=false"  # Image custom - pas de mise √† jour auto

  mailhog:
    image: mailhog/mailhog:latest
    container_name: ${COMPOSE_PROJECT_NAME}_mailhog
    ports:
      - "8025:8025"
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 60s
      timeout: 10s
      retries: 3
    labels:
      - "com.centurylinklabs.watchtower.enable=true"   # Image standard - mise √† jour auto

  adminer:
    image: adminer:latest
    container_name: ${COMPOSE_PROJECT_NAME}_adminer
    ports:
      - "8080:8080"
    networks:
      - app-network
    environment:
      - ADMINER_DEFAULT_SERVER=mariadb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "php", "-r", "file_get_contents('http://localhost:8080');"]
      interval: 60s
      timeout: 10s
      retries: 3
    labels:
      - "com.centurylinklabs.watchtower.enable=true"   # Image standard - mise √† jour auto

  it-tools:
    image: corentinth/it-tools:latest
    container_name: ${COMPOSE_PROJECT_NAME}_it-tools
    ports:
      - "8081:80"
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 60s
      timeout: 10s
      retries: 3
    labels:
      - "com.centurylinklabs.watchtower.enable=true"   # Image standard - mise √† jour auto

  dozzle:
    image: amir20/dozzle:latest
    container_name: ${COMPOSE_PROJECT_NAME}_dozzle
    ports:
      - "9999:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - app-network
    environment:
      - DOZZLE_LEVEL=info
      - DOZZLE_TAILSIZE=300
      - DOZZLE_FILTER=name=${COMPOSE_PROJECT_NAME}*
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080"]
      interval: 60s
      timeout: 10s
      retries: 3
    labels:
      - "com.centurylinklabs.watchtower.enable=true"   # Image standard - mise √† jour auto

  # üîÑ WATCHTOWER - Mises √† jour automatiques
  watchtower:
    image: containrrr/watchtower:latest
    container_name: ${COMPOSE_PROJECT_NAME}_watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - monitoring-network
    environment:
      # Configuration de base
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=false
      - WATCHTOWER_LABEL_ENABLE=true           # Mode s√©lectif bas√© sur les labels
      - WATCHTOWER_LOG_LEVEL=info

      # Planification - Tous les jours √† 3h du matin
      - WATCHTOWER_SCHEDULE=0 0 3 * * *

      # Surveillance des repositories priv√©s (si n√©cessaire)
      # - WATCHTOWER_REPO_USER=${DOCKER_USERNAME}
      # - WATCHTOWER_REPO_PASS=${DOCKER_PASSWORD}

      # Notifications (configurable via .env)
      - WATCHTOWER_NOTIFICATIONS=${WATCHTOWER_NOTIFICATIONS:-}
      - WATCHTOWER_NOTIFICATION_URL=${WATCHTOWER_NOTIFICATION_URL:-}

      # Configuration avanc√©e
      - WATCHTOWER_TIMEOUT=10s
      - WATCHTOWER_ROLLING_RESTART=true
      - WATCHTOWER_INCLUDE_RESTARTING=true

      # Debug (peut √™tre activ√© en d√©veloppement)
      - WATCHTOWER_DEBUG=${WATCHTOWER_DEBUG:-false}

    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"   # Watchtower peut se mettre √† jour lui-m√™me

networks:
  app-network:
    driver: bridge
    name: ${COMPOSE_PROJECT_NAME}_app_network
  monitoring-network:
    driver: bridge
    name: ${COMPOSE_PROJECT_NAME}_monitoring_network

volumes:
  mariadb_data:
    name: ${COMPOSE_PROJECT_NAME}_mariadb_data
  redis_data:
    name: ${COMPOSE_PROJECT_NAME}_redis_data
