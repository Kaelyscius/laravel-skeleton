#!/bin/bash

# Script de g√©n√©ration de certificats SSL auto-sign√©s pour Laravel - CORRIG√â WINDOWS
# Usage: ./docker/scripts/generate-ssl.sh

# Couleurs
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
PURPLE='\033[0;35m'
NC='\033[0m'

# Configuration renforc√©e pour Windows
DOMAIN="laravel.local"
SSL_DIR="./docker/apache/conf/ssl"
DAYS=3650  # 10 ans pour √©viter les renouvellements fr√©quents
KEY_SIZE=4096  # Cl√© plus forte pour r√©duire les alertes
COUNTRY="FR"
STATE="Ile-de-France"
CITY="Paris"
ORG="Laravel Development"
OU="Development Team"

echo -e "${CYAN}üîê G√©n√©ration de certificats SSL ULTRA-S√âCURIS√âS pour Windows${NC}"
echo -e "${CYAN}================================================================${NC}"

# D√©tecter l'OS
detect_os() {
    if [[ "$OSTYPE" == "msys" ]] || [[ "$OSTYPE" == "cygwin" ]] || [[ -n "$WINDIR" ]]; then
        echo "windows"
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        echo "macos"
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        echo "linux"
    else
        echo "unknown"
    fi
}

OS_TYPE=$(detect_os)
echo -e "${BLUE}üñ•Ô∏è OS d√©tect√©: $OS_TYPE${NC}"

# Cr√©er le r√©pertoire SSL s'il n'existe pas
mkdir -p "$SSL_DIR"

# V√©rifier si OpenSSL est install√©
if ! command -v openssl &> /dev/null; then
    echo -e "${RED}‚ùå OpenSSL n'est pas install√©${NC}"
    echo -e "${YELLOW}üí° Installation requise :${NC}"
    case $OS_TYPE in
        "windows")
            echo -e "  ‚Ä¢ Windows: Installez Git Bash (inclut OpenSSL) ou OpenSSL pour Windows"
            echo -e "  ‚Ä¢ Ou utilisez WSL: wsl --install"
            ;;
        "linux")
            echo -e "  ‚Ä¢ Ubuntu/Debian: sudo apt-get install openssl"
            echo -e "  ‚Ä¢ CentOS/RHEL: sudo yum install openssl"
            ;;
        "macos")
            echo -e "  ‚Ä¢ macOS: brew install openssl"
            ;;
    esac
    exit 1
fi

echo -e "${YELLOW}üìã Configuration du certificat RENFORC√âE :${NC}"
echo -e "  ‚Ä¢ Domaine: $DOMAIN"
echo -e "  ‚Ä¢ R√©pertoire: $SSL_DIR"
echo -e "  ‚Ä¢ Validit√©: $DAYS jours ($(($DAYS / 365)) ans)"
echo -e "  ‚Ä¢ Taille cl√©: $KEY_SIZE bits (ultra-s√©curis√©)"
echo -e "  ‚Ä¢ Extensions: v3 avec SAN pour compatibilit√© maximale"
echo ""

# V√©rifier si les certificats existent d√©j√†
if [ -f "$SSL_DIR/$DOMAIN.crt" ] && [ -f "$SSL_DIR/$DOMAIN.key" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Certificats existants trouv√©s${NC}"

    # V√©rifier la validit√© du certificat existant
    if openssl x509 -in "$SSL_DIR/$DOMAIN.crt" -noout -checkend 86400 > /dev/null 2>&1; then
        echo -e "${GREEN}‚úì Certificat valide pour plus de 24h${NC}"

        # Pour Windows, proposer toujours la r√©g√©n√©ration pour corriger les probl√®mes
        if [ "$OS_TYPE" = "windows" ]; then
            echo -e "${CYAN}ü™ü Windows d√©tect√© - R√©g√©n√©ration recommand√©e pour optimiser la compatibilit√©${NC}"
            echo -e "${YELLOW}R√©g√©n√©ration des certificats pour Windows...${NC}"
        else
            # Proposer de r√©g√©n√©rer ou conserver
            if [ -t 0 ]; then
                echo -e "${CYAN}Voulez-vous r√©g√©n√©rer les certificats ? (y/N)${NC}"
                read -r regenerate
                if [[ ! "$regenerate" =~ ^[Yy]$ ]]; then
                    echo -e "${BLUE}‚Üí Conservation des certificats existants${NC}"
                    show_windows_install_instructions
                    exit 0
                fi
            else
                echo -e "${BLUE}‚Üí Mode non-interactif : conservation des certificats valides${NC}"
                show_windows_install_instructions
                exit 0
            fi
        fi
    else
        echo -e "${RED}‚úó Certificat expir√© ou invalide${NC}"
        echo -e "${YELLOW}‚Üí R√©g√©n√©ration automatique...${NC}"
    fi

    # Sauvegarder les anciens certificats
    backup_dir="$SSL_DIR/backup-$(date +%Y%m%d-%H%M%S)"
    mkdir -p "$backup_dir"
    mv "$SSL_DIR/$DOMAIN.crt" "$backup_dir/" 2>/dev/null || true
    mv "$SSL_DIR/$DOMAIN.key" "$backup_dir/" 2>/dev/null || true
    echo -e "${YELLOW}‚Üí Sauvegarde cr√©√©e: $backup_dir${NC}"
fi

echo -e "${YELLOW}üîë G√©n√©ration de la cl√© priv√©e ultra-s√©curis√©e ($KEY_SIZE bits)...${NC}"

# G√©n√©rer la cl√© priv√©e avec une taille renforc√©e
if ! openssl genrsa -out "$SSL_DIR/$DOMAIN.key" $KEY_SIZE 2>/dev/null; then
    echo -e "${RED}‚ùå Erreur lors de la g√©n√©ration de la cl√© priv√©e${NC}"
    exit 1
fi

echo -e "${GREEN}‚úì Cl√© priv√©e ultra-s√©curis√©e g√©n√©r√©e${NC}"

echo -e "${YELLOW}üìú G√©n√©ration du certificat avec extensions compl√®tes...${NC}"

# Cr√©er un fichier de configuration OpenSSL ultra-complet pour Windows
config_file=$(mktemp)
cat > "$config_file" << EOF
[req]
default_bits = $KEY_SIZE
prompt = no
default_md = sha256
distinguished_name = dn
req_extensions = v3_req

[dn]
C=$COUNTRY
ST=$STATE
L=$CITY
O=$ORG
OU=$OU
CN=$DOMAIN

[v3_req]
basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment, dataEncipherment
extendedKeyUsage = serverAuth, clientAuth
subjectAltName = @alt_names
authorityKeyIdentifier = keyid,issuer
subjectKeyIdentifier = hash

[alt_names]
DNS.1 = $DOMAIN
DNS.2 = www.$DOMAIN
DNS.3 = localhost
DNS.4 = *.laravel.local
DNS.5 = laravel.test
DNS.6 = www.laravel.test
IP.1 = 127.0.0.1
IP.2 = ::1
IP.3 = 192.168.1.1
IP.4 = 10.0.0.1
EOF

# G√©n√©rer le certificat auto-sign√© avec extensions v3 compl√®tes
if ! openssl req -new -x509 -key "$SSL_DIR/$DOMAIN.key" -out "$SSL_DIR/$DOMAIN.crt" -days $DAYS -config "$config_file" -extensions v3_req 2>/dev/null; then
    echo -e "${RED}‚ùå Erreur lors de la g√©n√©ration du certificat${NC}"
    rm -f "$config_file"
    exit 1
fi

# Nettoyer le fichier de configuration temporaire
rm -f "$config_file"

echo -e "${GREEN}‚úì Certificat ultra-s√©curis√© g√©n√©r√©${NC}"

# D√©finir les permissions appropri√©es
chmod 600 "$SSL_DIR/$DOMAIN.key"
chmod 644 "$SSL_DIR/$DOMAIN.crt"

echo -e "${YELLOW}üîç V√©rification du certificat...${NC}"

# V√©rifier le certificat g√©n√©r√©
if openssl x509 -in "$SSL_DIR/$DOMAIN.crt" -text -noout > /dev/null 2>&1; then
    echo -e "${GREEN}‚úì Certificat ultra-s√©curis√© valide${NC}"

    # Afficher les informations du certificat
    echo -e "${BLUE}üìã Informations du certificat :${NC}"
    echo -e "${CYAN}‚Üí Sujet:${NC}"
    openssl x509 -in "$SSL_DIR/$DOMAIN.crt" -noout -subject | sed 's/subject=/  /'
    echo -e "${CYAN}‚Üí Validit√©:${NC}"
    echo -e "  De: $(openssl x509 -in "$SSL_DIR/$DOMAIN.crt" -noout -startdate | sed 's/notBefore=//')"
    echo -e "  √Ä:  $(openssl x509 -in "$SSL_DIR/$DOMAIN.crt" -noout -enddate | sed 's/notAfter=//')"
    echo -e "${CYAN}‚Üí Taille de cl√©:${NC} $KEY_SIZE bits"
    echo -e "${CYAN}‚Üí Algorithme:${NC} SHA256 avec RSA"
    echo -e "${CYAN}‚Üí Noms alternatifs:${NC}"
    openssl x509 -in "$SSL_DIR/$DOMAIN.crt" -noout -text | grep -A 10 "Subject Alternative Name" | tail -5 | sed 's/^/  /'
else
    echo -e "${RED}‚ùå Certificat invalide${NC}"
    exit 1
fi

echo ""
echo -e "${GREEN}‚úÖ Certificats SSL ultra-s√©curis√©s g√©n√©r√©s avec succ√®s !${NC}"

# Afficher les fichiers g√©n√©r√©s
echo -e "${BLUE}üìÅ Fichiers g√©n√©r√©s :${NC}"
echo -e "  ‚Ä¢ Certificat: $SSL_DIR/$DOMAIN.crt ($KEY_SIZE bits, valide $(($DAYS / 365)) ans)"
echo -e "  ‚Ä¢ Cl√© priv√©e: $SSL_DIR/$DOMAIN.key (s√©curis√©e)"
echo ""

# Fonction pour afficher les instructions Windows
show_windows_install_instructions() {
    if [ "$OS_TYPE" = "windows" ]; then
        echo -e "${PURPLE}ü™ü INSTRUCTIONS SP√âCIALES POUR WINDOWS${NC}"
        echo -e "${PURPLE}====================================${NC}"
        echo ""
        echo -e "${YELLOW}üì± Installation automatique du certificat :${NC}"
        echo ""
        echo -e "${CYAN}üîß M√©thode 1: Script PowerShell automatique${NC}"
        echo -e "1. Ouvrez PowerShell en tant qu'Administrateur"
        echo -e "2. Ex√©cutez cette commande :"
        echo -e "   ${GREEN}Import-Certificate -FilePath \"$(pwd)/$SSL_DIR/$DOMAIN.crt\" -CertStoreLocation Cert:\\LocalMachine\\Root${NC}"
        echo ""
        echo -e "${CYAN}üñ±Ô∏è M√©thode 2: Interface graphique${NC}"
        echo -e "1. Double-cliquez sur: ${GREEN}$SSL_DIR/$DOMAIN.crt${NC}"
        echo -e "2. Cliquez sur 'Installer le certificat...'"
        echo -e "3. Choisissez 'Ordinateur local' puis 'Suivant'"
        echo -e "4. S√©lectionnez 'Placer tous les certificats dans le magasin suivant'"
        echo -e "5. Cliquez sur 'Parcourir' et choisissez ${GREEN}'Autorit√©s de certification racines de confiance'${NC}"
        echo -e "6. Cliquez sur 'Suivant' puis 'Terminer'"
        echo -e "7. Confirmez l'installation avec 'Oui'"
        echo ""
        echo -e "${YELLOW}‚ö†Ô∏è Important pour les antivirus :${NC}"
        echo -e "  ‚Ä¢ ${GREEN}Windows Defender${NC} : Peut bloquer temporairement - ajouter une exception"
        echo -e "  ‚Ä¢ ${GREEN}Avast/AVG${NC} : Aller dans Param√®tres ‚Üí Exceptions ‚Üí Ajouter l'URL https://laravel.local"
        echo -e "  ‚Ä¢ ${GREEN}Kaspersky${NC} : Protection Web ‚Üí G√©rer les exclusions ‚Üí Ajouter laravel.local"
        echo -e "  ‚Ä¢ ${GREEN}Norton${NC} : Param√®tres ‚Üí Antivirus ‚Üí Exclusions ‚Üí Sites web ‚Üí Ajouter laravel.local"
        echo ""
        echo -e "${CYAN}üîÑ Apr√®s installation :${NC}"
        echo -e "1. Red√©marrez votre navigateur compl√®tement"
        echo -e "2. Videz le cache DNS: ${GREEN}ipconfig /flushdns${NC}"
        echo -e "3. Testez l'acc√®s: ${GREEN}https://laravel.local${NC}"
        echo ""
    fi
}

# Instructions d'installation dans le syst√®me
echo -e "${YELLOW}üì± Installation dans le syst√®me (pour √©liminer les avertissements)${NC}"
echo -e "${YELLOW}================================================================${NC}"
echo ""

# Instructions sp√©cifiques par OS
case $OS_TYPE in
    "windows")
        show_windows_install_instructions
        ;;
    "linux")
        echo -e "${CYAN}üêß Linux (Ubuntu/Debian) :${NC}"
        echo -e "  sudo cp $SSL_DIR/$DOMAIN.crt /usr/local/share/ca-certificates/"
        echo -e "  sudo update-ca-certificates"
        echo ""
        ;;
    "macos")
        echo -e "${CYAN}üçé macOS :${NC}"
        echo -e "  sudo security add-trusted-cert -d -r trustRoot \\"
        echo -e "    -k /Library/Keychains/System.keychain $SSL_DIR/$DOMAIN.crt"
        echo ""
        ;;
    *)
        echo -e "${CYAN}üñ•Ô∏è  Syst√®me non reconnu :${NC}"
        echo -e "  Consultez la documentation de votre OS pour installer"
        echo -e "  le certificat dans le magasin de certificats de confiance"
        echo ""
        ;;
esac

# Instructions pour /etc/hosts
echo -e "${YELLOW}üåê Configuration du fichier hosts${NC}"
echo -e "${YELLOW}================================${NC}"
echo ""
echo -e "${BLUE}Ajoutez cette ligne √† votre fichier hosts :${NC}"
echo -e "${CYAN}127.0.0.1 $DOMAIN www.$DOMAIN${NC}"
echo ""

# Instructions par OS pour √©diter hosts
case $OS_TYPE in
    "linux"|"macos")
        echo -e "${CYAN}Commande pour √©diter :${NC}"
        echo -e "  sudo nano /etc/hosts"
        echo -e "  # ou"
        echo -e "  echo '127.0.0.1 $DOMAIN www.$DOMAIN' | sudo tee -a /etc/hosts"
        ;;
    "windows")
        echo -e "${CYAN}Windows (en tant qu'administrateur) :${NC}"
        echo -e "  notepad C:\\Windows\\System32\\drivers\\etc\\hosts"
        echo -e "  # ou via PowerShell Admin :"
        echo -e "  Add-Content C:\\Windows\\System32\\drivers\\etc\\hosts '127.0.0.1 $DOMAIN www.$DOMAIN'"
        ;;
esac

echo ""

# Installation automatique si Windows
if [ "$OS_TYPE" = "windows" ]; then
    echo -e "${YELLOW}ü§ñ Installation automatique Windows ?${NC}"
    echo -e "${YELLOW}Voulez-vous installer automatiquement le certificat dans Windows ? (y/N)${NC}"

    if [ -t 0 ]; then
        read -r auto_install_windows
    else
        auto_install_windows="n"
    fi

    if [[ "$auto_install_windows" =~ ^[Yy]$ ]]; then
        echo -e "${YELLOW}üîß Tentative d'installation automatique Windows...${NC}"

        # Convertir le chemin Windows
        windows_cert_path=$(cygpath -w "$(pwd)/$SSL_DIR/$DOMAIN.crt" 2>/dev/null || echo "$(pwd)/$SSL_DIR/$DOMAIN.crt")

        # Essayer PowerShell si disponible
        if command -v powershell.exe >/dev/null 2>&1; then
            echo -e "${YELLOW}‚Üí Utilisation de PowerShell pour l'installation...${NC}"
            if powershell.exe -Command "Import-Certificate -FilePath '$windows_cert_path' -CertStoreLocation Cert:\\LocalMachine\\Root" 2>/dev/null; then
                echo -e "${GREEN}‚úÖ Certificat install√© automatiquement dans Windows !${NC}"
                echo -e "${BLUE}‚Üí Red√©marrez votre navigateur et testez https://$DOMAIN${NC}"
            else
                echo -e "${YELLOW}‚ö†Ô∏è Installation automatique √©chou√©e - permissions admin requises${NC}"
                echo -e "${BLUE}‚Üí Suivez les instructions manuelles ci-dessus${NC}"
            fi
        else
            echo -e "${YELLOW}‚ö†Ô∏è PowerShell non disponible pour l'installation automatique${NC}"
            echo -e "${BLUE}‚Üí Suivez les instructions manuelles ci-dessus${NC}"
        fi
    fi
fi

echo -e "\n${GREEN}üéâ Configuration SSL termin√©e !${NC}"

# Test de connectivit√©
echo -e "\n${YELLOW}üß™ Test de connectivit√©${NC}"
echo -e "${YELLOW}=====================${NC}"

# V√©rifier si Apache est en cours d'ex√©cution
if docker ps --format "{{.Names}}" | grep -q "apache" 2>/dev/null; then
    echo -e "${GREEN}‚úì Container Apache d√©tect√©${NC}"
    echo -e "${BLUE}‚Üí Testez votre configuration: https://$DOMAIN${NC}"
else
    echo -e "${YELLOW}‚ö† Container Apache non d√©tect√©${NC}"
    echo -e "${BLUE}‚Üí D√©marrez votre environnement avec: make up${NC}"
    echo -e "${BLUE}‚Üí Puis testez: https://$DOMAIN${NC}"
fi

echo ""
echo -e "${CYAN}üîó URLs de test :${NC}"
echo -e "  ‚Ä¢ HTTPS: https://$DOMAIN"
echo -e "  ‚Ä¢ HTTP (redirection): http://$DOMAIN"
echo -e "  ‚Ä¢ Avec www: https://www.$DOMAIN"
echo ""

# Afficher les commandes utiles
echo -e "${BLUE}üõ†Ô∏è Commandes utiles :${NC}"
echo -e "  ‚Ä¢ V√©rifier le certificat:"
echo -e "    openssl x509 -in $SSL_DIR/$DOMAIN.crt -text -noout"
echo -e "  ‚Ä¢ Tester la connexion SSL:"
echo -e "    openssl s_client -connect $DOMAIN:443 -servername $DOMAIN"
echo -e "  ‚Ä¢ Voir l'expiration:"
echo -e "    openssl x509 -in $SSL_DIR/$DOMAIN.crt -noout -enddate"
echo ""

# Instructions sp√©ciales pour Windows
if [ "$OS_TYPE" = "windows" ]; then
    echo -e "${PURPLE}ü™ü R√âSOLUTION DES PROBL√àMES WINDOWS${NC}"
    echo -e "${PURPLE}===================================${NC}"
    echo ""
    echo -e "${YELLOW}Si votre antivirus bloque encore le site :${NC}"
    echo -e "1. ${GREEN}Ajoutez une exception${NC} pour https://laravel.local"
    echo -e "2. ${GREEN}D√©sactivez temporairement${NC} la protection web"
    echo -e "3. ${GREEN}Red√©marrez le navigateur${NC} apr√®s installation du certificat"
    echo -e "4. ${GREEN}Videz le cache DNS${NC}: ipconfig /flushdns"
    echo -e "5. ${GREEN}Testez en navigation priv√©e${NC} pour √©viter le cache"
    echo ""
    echo -e "${CYAN}üîç V√©rification de l'installation :${NC}"
    echo -e "1. Ouvrez certmgr.msc (Gestionnaire de certificats)"
    echo -e "2. Allez dans 'Autorit√©s de certification racines de confiance' ‚Üí 'Certificats'"
    echo -e "3. Cherchez '$DOMAIN' dans la liste"
    echo -e "4. Si pr√©sent ‚Üí Installation r√©ussie ‚úÖ"
    echo ""
fi

echo -e "${GREEN}‚úÖ Script termin√© avec succ√®s !${NC}"
echo -e "${CYAN}üéØ Pour une exp√©rience optimale sur Windows :${NC}"
echo -e "  1. Installez le certificat dans le magasin de confiance"
echo -e "  2. Ajoutez une exception antivirus si n√©cessaire"
echo -e "  3. Red√©marrez votre navigateur"
echo -e "  4. Testez avec https://laravel.local"